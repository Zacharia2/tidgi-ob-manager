{"title":"$:/plugins/whitefall/obsidian-manager","name":"obsidian-manager","author":"whitefall","description":"","plugin-type":"plugin","version":"0.0.1","list":"readme","dependents":"","type":"application/json","text":"{\"tiddlers\":{\"$:/plugins/whitefall/obsidian-manager/readme\":{\"title\":\"$:/plugins/whitefall/obsidian-manager/readme\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"! obsidian-manager\\n\\n\"},\"$:/plugins/whitefall/obsidian-manager/router/get-obstore.js\":{\"title\":\"$:/plugins/whitefall/obsidian-manager/router/get-obstore.js\",\"text\":\"!function(){\\\"use strict\\\";exports.method=\\\"GET\\\",exports.path=/^\\\\/obstore\\\\/(.+)$/,exports.handler=function(e,n,t){var i,o,a,r,s=require(\\\"path\\\"),d=require(\\\"fs\\\"),p=(require(\\\"util\\\"),$tw.utils.decodeURIComponentSafe(t.params[0])),c=function(e,n){var n=n||[\\\".git\\\",\\\".obsidian\\\"],t=[];for(const o of d.readdirSync(e)){var i=s.join(e,o);d.statSync(i).isFile()?t.push(i):n.includes(o)||(i=c(i),t=t.concat(i))}return t},p=c(p,[\\\".git\\\",\\\".obsidian\\\",\\\"绘图\\\"]),p=(r={image:{},md:{}},p.forEach(e=>{o=s.basename(e),a=s.extname(o),i=d.readFileSync(e,\\\"utf8\\\"),-1!==[\\\".jpg\\\",\\\".jpeg\\\",\\\".png\\\"].indexOf(a)?r.image[o]=i:\\\".md\\\"===a&&(r.md[o]=i)}),r);t.sendResponse(200,{\\\"Content-Type\\\":\\\"application/json\\\"},p)}}();\",\"type\":\"application/javascript\",\"module-type\":\"route\"},\"$:/plugins/whitefall/obsidian-manager/obsidian-main.js\":{\"title\":\"$:/plugins/whitefall/obsidian-manager/obsidian-main.js\",\"type\":\"application/javascript\",\"module-type\":\"widget\",\"Modern.TiddlyDev#Origin\":\"index.ts\",\"text\":\"\\\"use strict\\\";var import_widget=require(\\\"$:/core/modules/widgets/widget.js\\\"),ExampleWidget=class extends import_widget.widget{refresh(e){return!1}render(e,t){this.parentDomNode=e,this.execute();var s=new XMLHttpRequest,o=(s.open(\\\"GET\\\",\\\"/obstore/C:/Users/Snowy/Documents/GitHub/Neural-Networks\\\",!0),s.onreadystatechange=function(){4===this.readyState&&200===this.status&&(console.log(\\\"http请求\\\"),console.log(s.responseText))},s.send(),$tw.utils.domMaker(\\\"p\\\",{text:\\\"This is a widget!\\\"}));this.domNodes.push(e.appendChild(o))}};exports.obm=ExampleWidget;\"}}}","Modern.TiddlyDev#SHA256-Hashed":"f075bacdd3529ea892c03b4121fdb3dfa40f00ef9989b1c563a8ee5e1bb5518c"}