{"title":"$:/plugins/whitefall/obsidian-manager","name":"obsidian-manager","author":"whitefall","description":"","plugin-type":"plugin","version":"0.0.1","list":"readme","dependents":"","type":"application/json","text":"{\"tiddlers\":{\"$:/plugins/whitefall/obsidian-manager/readme\":{\"title\":\"$:/plugins/whitefall/obsidian-manager/readme\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"! obsidian-manager\\n\\n\"},\"$:/plugins/whitefall/obsidian-manager/router/get-obstore.js\":{\"title\":\"$:/plugins/whitefall/obsidian-manager/router/get-obstore.js\",\"text\":\"!function(){\\\"use strict\\\";exports.method=\\\"GET\\\",exports.path=/^\\\\/obstore\\\\/(.+)$/,exports.handler=function(e,t,i){var n,s,o,r,a=require(\\\"path\\\"),p=require(\\\"fs\\\"),d=(require(\\\"util\\\"),$tw.utils.decodeURIComponentSafe(i.params[0])),c=function(e,t){var t=t||[\\\".git\\\",\\\".obsidian\\\"],i=[];for(const s of p.readdirSync(e)){var n=a.join(e,s);p.statSync(n).isFile()?i.push(n):t.includes(s)||(n=c(n),i=i.concat(n))}return i},d=c(d,[\\\".git\\\",\\\".obsidian\\\",\\\"绘图\\\"]),d=(r={image:{},md:{},list:[]},d.forEach(e=>{s=a.basename(e),o=a.extname(s),n=p.readFileSync(e,\\\"utf8\\\"),-1!==[\\\".jpg\\\",\\\".jpeg\\\",\\\".png\\\"].indexOf(o)?r.image[s]=n:\\\".md\\\"===o&&(r.md[s]=n),r.list.push(s)}),r),d=JSON.stringify(d);i.sendResponse(200,{\\\"Content-Type\\\":\\\"application/json\\\"},d)}}();\",\"type\":\"application/javascript\",\"module-type\":\"route\"},\"$:/plugins/whitefall/obsidian-manager/obsidian-main.js\":{\"title\":\"$:/plugins/whitefall/obsidian-manager/obsidian-main.js\",\"type\":\"application/javascript\",\"module-type\":\"widget\",\"Modern.TiddlyDev#Origin\":\"obsidian-main.ts\",\"text\":\"\\\"use strict\\\";var import_widget=require(\\\"$:/core/modules/widgets/widget.js\\\"),BackgroundSyncManager=class{constructor(){this.setupListener()}setupListener(){$tw.rootWidget.addEventListener(\\\"tw-obsidian-add\\\",async t=>{console.log(t.param)}),$tw.rootWidget.addEventListener(\\\"tw-obsidian-purge\\\",async t=>{}),$tw.rootWidget.addEventListener(\\\"tw-obsidian-update\\\",async t=>{})}async start(t){}async onSyncStart(t){}async addObsidian(){}async purgeStore(){}async fetchData(){return await(await fetch(\\\"/obstore/C:/Users/Snowy/Documents/GitHub/Neural-Networks\\\")).json()}},ObMainWidget=class extends import_widget.widget{refresh(t){return!1}async render(t,e){this.parentDomNode=t,this.execute(),new BackgroundSyncManager;var s=$tw.utils.domMaker(\\\"p\\\",{text:\\\"This is a widget!\\\"}),i=$tw.utils.domMaker(\\\"button\\\",{\\\"class\\\":\\\"ob-main-widget-button\\\",text:\\\"Add\\\"}),a=$tw.utils.domMaker(\\\"button\\\",{\\\"class\\\":\\\"ob-main-widget-button\\\",text:\\\"purge\\\"});i.onclick=function(){$tw.rootWidget.dispatchEvent({type:\\\"tw-obsidian-add\\\",param:\\\"nihao\\\"})},a.onclick=function(){$tw.rootWidget.dispatchEvent({type:\\\"tw-obsidian-purge\\\"})},this.domNodes.push(t.appendChild(s)),this.domNodes.push(t.appendChild(i)),this.domNodes.push(t.appendChild(a))}};exports.obm=ObMainWidget;\"}}}","Modern.TiddlyDev#SHA256-Hashed":"ba409015c254a7e2ce27fba834d84988005b3dfce2feb5a3dd9f73e0f3e4fea8"}