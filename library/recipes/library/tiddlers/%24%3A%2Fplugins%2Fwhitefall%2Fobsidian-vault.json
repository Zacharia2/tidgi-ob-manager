{"author":"whitefall","core-version":">=5.3.0","dependents":"$:/plugins/tiddlywiki/markdown","description":"Obsidian Vault发布工具 by NodeJS TiddlyWiki","list":"ui/Panel readme","name":"Obsidian Vault","plugin-type":"plugin","text":"{\"tiddlers\":{\"$:/plugins/whitefall/obsidian-vault/readme\":{\"title\":\"$:/plugins/whitefall/obsidian-vault/readme\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"! tw5-obsidian-vault\\n\\nTidGi ≥ v0.8.0 需要在工作区设置 博客和服务器设置中 启用 HTTP API 并 关闭 凭证鉴权选项。\\n\\n# 在文本框中输入ob库文件夹路径，点击Add按钮。\\n# 你可以使用purge按钮清空添加的内容。\\n# 你可以在开发者模式-控制台中观看到正在进行的操作。\\n\\n!! ignore表达式\\n\\n默认表达式：留空即默认忽略 \\\".git\\\", \\\".obsidian\\\", \\\".stfolder\\\", \\\".stversions\\\" 四个文件夹。\\n\\n附加表达式：可以在ignore输入框输入`+文件夹名称, 文件夹名称, ...`，注意首字母必须为`+`，忽略更多文件夹。注意是英文逗号。\\n\\n自定义表达式：若首字母非`+`字符，则为自定义忽略文件夹。\\n\\n!! 过滤文件表达式\\n\\n使用正则表达式匹配文件中是否含有匹配内容，如“def:pub”，若文件夹中有此表达式则检出写入wiki中。\\n\\n\\n\\n项目介绍及仓库地址：https://github.com/tiddly-gittly/tidgi-obsidian-manager\"},\"$:/plugins/whitefall/obsidian-vault/router/get-obvault.js\":{\"title\":\"$:/plugins/whitefall/obsidian-vault/router/get-obvault.js\",\"text\":\"!function(){\\\"use strict\\\";exports.method=\\\"GET\\\",exports.path=/^\\\\/obvault\\\\/(.+)$/,exports.handler=function(e,t,s){var i,a,r,n,p,o,d=require(\\\"path\\\"),l=require(\\\"fs\\\"),c=$tw.utils.decodeURIComponentSafe(s.params[0]),m=s.queryParameters,u=function(e,t){var t=t||[\\\".git\\\",\\\".obsidian\\\"],i=[];if(!l.lstatSync(e).isDirectory())return s.sendResponse(400,{\\\"Content-Type\\\":\\\"text/plain\\\"},\\\"Not folder: \\\"+e),!1;for(const r of l.readdirSync(e)){var a=d.join(e,r);l.statSync(a).isFile()?i.push(a):t.includes(r)||(a=u(a),i=i.concat(a))}return i},g=function(e,t){return e=e.replace(/\\\\\\\\/g,\\\"/\\\"),(t=t.replace(/\\\\\\\\/g,\\\"/\\\")).slice(e.length+1)},f=u(c,m.ignore);0!=f&&(i=f,a=m.regText,p={obVaultName:c.split(\\\"/\\\").pop()||\\\"-\\\",mdFiles:{},imgFiles:{},bp_peer:{}},o=a||\\\"\\\",i.forEach(e=>{r=d.basename(e),n=d.extname(r),p.bp_peer[r]?p.bp_peer[r].push(g(c,e)):p.bp_peer[r]=[g(c,e)];var t;-1!==[\\\".jpg\\\",\\\".jpeg\\\",\\\".png\\\",\\\".gif\\\",\\\".bmp\\\",\\\".svg\\\"].indexOf(n)?p.imgFiles[r]?p.imgFiles[r].push({path:g(c,e),data:l.readFileSync(e).toString(\\\"base64\\\")}):p.imgFiles[r]=[{path:g(c,e),data:l.readFileSync(e).toString(\\\"base64\\\")}]:\\\".md\\\"===n&&(n=l.readFileSync(e,\\\"utf8\\\"),t=l.statSync(e),RegExp(o).test(n))&&(p.mdFiles[r]?p.mdFiles[r].push({path:g(c,e),data:n,created:$tw.utils.stringifyDate(t.birthtime),modified:$tw.utils.stringifyDate(t.mtime)}):p.mdFiles[r]=[{path:g(c,e),data:n,created:$tw.utils.stringifyDate(t.birthtime),modified:$tw.utils.stringifyDate(t.mtime)}])}),f=p,m=JSON.stringify(f),s.sendResponse(200,{\\\"Content-Type\\\":\\\"application/json\\\"},m))}}();\",\"type\":\"application/javascript\",\"module-type\":\"route\"},\"$:/plugins/whitefall/obsidian-vault/stylesheet/obsidian-main-style\":{\"title\":\"$:/plugins/whitefall/obsidian-vault/stylesheet/obsidian-main-style\",\"tags\":\"$:/tags/Stylesheet\",\"type\":\"text/css\",\"text\":\"#ob-widget-path{width:100%;height:100%;line-height:100%;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}\"},\"$:/plugins/whitefall/obsidian-vault/ui/Panel\":{\"title\":\"$:/plugins/whitefall/obsidian-vault/ui/Panel\",\"type\":\"text/vnd.tiddlywiki\",\"tags\":\"$:/tags/ControlPanel/SettingsTab\",\"caption\":\"OBM-Panel\",\"text\":\"<$obm/>\\n\"},\"$:/plugins/whitefall/obsidian-vault/ui/displayCaption\":{\"title\":\"$:/plugins/whitefall/obsidian-vault/ui/displayCaption\",\"text\":\"\\\\whitespace trim\\n<h2 class=\\\"tc-title\\\">\\n{{!!caption}}\\n</h2>\"},\"$:/plugins/whitefall/obsidian-vault/ui/displayCaptionFilter\":{\"title\":\"$:/plugins/whitefall/obsidian-vault/ui/displayCaptionFilter\",\"tags\":\"$:/tags/ViewTemplateTitleFilter\",\"list-before\":\"$:/config/ViewTemplateTitleFilters/default\",\"text\":\"[<currentTiddler>has[obvault]has[caption]then[$:/plugins/whitefall/obsidian-vault/ui/displayCaption]]\"},\"$:/plugins/whitefall/obsidian-vault/ui/vaulttrees\":{\"title\":\"$:/plugins/whitefall/obsidian-vault/ui/vaulttrees\",\"tags\":\"$:/tags/SideBar\",\"caption\":\"VaultTrees\",\"text\":\"\\n<div class=\\\"tc-tree-obv\\\">\\n<span><center><p>Obsidian Vault<sup><$link to=\\\"$:/plugins/whitefall/obsidian-vault/ui/Panel\\\">p</$link></sup>&nbsp;文件列表</p></center></span>\\n<<tree prefix:\\\"λ:/\\\">>\\n</div>\\n\\n<!-- \\n[get[obvault]unique[]]\\n[field:obvault[Neural-Networks]get[vaulttree]]\\n条目名必须和字段路径中的名字一致。\\n-->\\n\"},\"$:/plugins/whitefall/obsidian-vault/obvault-main.js\":{\"title\":\"$:/plugins/whitefall/obsidian-vault/obvault-main.js\",\"type\":\"application/javascript\",\"module-type\":\"widget\",\"Modern.TiddlyDev#Origin\":\"obvault-main.ts\",\"text\":\"\\\"use strict\\\";var import_widget=require(\\\"$:/core/modules/widgets/widget.js\\\");function isUrl(t){return new RegExp(\\\"^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\\\\\S+(?::\\\\\\\\S*)?@)?(?:(?:(?:[1-9]\\\\\\\\d?|1\\\\\\\\d\\\\\\\\d|2[01]\\\\\\\\d|22[0-3])(?:\\\\\\\\.(?:1?\\\\\\\\d{1,2}|2[0-4]\\\\\\\\d|25[0-5])){2}(?:\\\\\\\\.(?:[0-9]\\\\\\\\d?|1\\\\\\\\d\\\\\\\\d|2[0-4]\\\\\\\\d|25[0-4]))|(?:(?:[a-z\\\\\\\\u00a1-\\\\\\\\uffff0-9]+-?)*[a-z\\\\\\\\u00a1-\\\\\\\\uffff0-9]+)(?:\\\\\\\\.(?:[a-z\\\\\\\\u00a1-\\\\\\\\uffff0-9]+-?)*[a-z\\\\\\\\u00a1-\\\\\\\\uffff0-9]+)*(?:\\\\\\\\.(?:[a-z\\\\\\\\u00a1-\\\\\\\\uffff]{2,})))|localhost)(?::\\\\\\\\d{2,5})?(?:(/|\\\\\\\\?|#)[^\\\\\\\\s]*)?$\\\",\\\"i\\\").test(t)}function links_wiki_syntax(e,i,a){var t={pattern:new RegExp(\\\"(?<!!)\\\\\\\\[\\\\\\\\[(.*?)\\\\\\\\]\\\\\\\\]\\\",\\\"g\\\"),target:\\\"[[$1]]\\\"},n=(new RegExp(\\\"(?<!!)\\\\\\\\[(.*?)\\\\\\\\]\\\\\\\\((.*?)\\\\\\\\)\\\",\\\"g\\\"),[...e.matchAll(t.pattern)]);for(const s in n){var l=n[s][1],o=n[s][0],l=l.split(\\\"|\\\"),d=l[0];if(1===l.length){if(isUrl(d))break;!isUrl(d)&&d.includes(\\\"/\\\")&&(e=e.replace(o,\\\"[[\\\"+l[0].split(\\\"/\\\").slice(-1)+\\\"|λ:/\\\"+a+\\\"/\\\"+l[0]+\\\"]]\\\"));var r=d+\\\".md\\\";if(r in i){let t=i[r][0];(t=t.replace(/.md$/,\\\"\\\"))&&(e=e.replace(o,\\\"[[\\\"+l[0]+\\\"|λ:/\\\"+a+\\\"/\\\"+t+\\\"]]\\\"))}}if(1<l.length){isUrl(d)&&(e=e.replace(o,\\\"[[\\\"+l[1]+\\\"|\\\"+l[0]+\\\"]]\\\")),!isUrl(d)&&d.includes(\\\"/\\\")&&(e=e.replace(o,\\\"[[\\\"+l[1]+\\\"|λ:/\\\"+a+\\\"/\\\"+l[0]+\\\"]]\\\"));r=d+\\\".md\\\";if(r in i){let t=i[r][0];t&&(t=t.replace(/.md$/,\\\"\\\"),e=e.replace(o,\\\"[[\\\"+l[1]+\\\"|λ:/\\\"+a+\\\"/\\\"+t+\\\"]]\\\"))}}}return e}function img_wiki_syntax(t){return t=(t=t.replace(/\\\\!\\\\[\\\\[(.*?)\\\\]\\\\]/g,(t,e)=>{var i=e.split(\\\"|\\\"),a=i[0].split(\\\".\\\").slice(-1);if(![\\\"jpg\\\",\\\"jpeg\\\",\\\"png\\\",\\\"gif\\\",\\\"bmp\\\",\\\"svg\\\"].indexOf(a))return\\\"{{\\\"+e+\\\"}}\\\";if(1===i.length)return\\\"[img [\\\"+i[0]+\\\"]]\\\";if(1<i.length){a=+i.slice(-1)[0];if(\\\"number\\\"==typeof a)return\\\"[img width=\\\"+a+\\\" [\\\"+i[0]+\\\"]]\\\"}})).replace(/\\\\!\\\\[(.*?)\\\\]\\\\((.*?)\\\\)/g,(t,e,i)=>{var a=e.split(\\\"|\\\"),n=i,l=n.split(\\\".\\\").slice(-1);if(![\\\"jpg\\\",\\\"jpeg\\\",\\\"png\\\",\\\"gif\\\",\\\"bmp\\\",\\\"svg\\\",\\\"ico\\\"].indexOf(l))return t;if(0===a.length||\\\"\\\"===a[0])return\\\"[img [\\\"+n+\\\"]]\\\";if(1===a.length)return\\\"[img [\\\"+a[0]+\\\"|\\\"+n+\\\"]]\\\";if(1<a.length){l=+a.slice(-1)[0].split(\\\"x\\\")[0];if(\\\"number\\\"==typeof l)return\\\"[img width=\\\"+l+\\\" [\\\"+a[0]+\\\"|\\\"+n+\\\"]]\\\"}})}async function convert(t,e,i){return t=links_wiki_syntax(t=img_wiki_syntax(t),e,i)}function tm_notify(t,e){$tw.wiki.addTiddler({title:\\\"$:/state/notification/\\\"+t,text:t+\\\": \\\"+e}),$tw.notifier.display(\\\"$:/state/notification/\\\"+t)}async function addVault(t){console.log(\\\"vaultName: \\\"+t.obVaultName);var e=$tw.wiki.getTiddlerText(\\\"$:/status/UserName\\\");for(const p in t.mdFiles){var i=t.mdFiles[p];if(0!=i.length&&1==i.length){var a=await convert(i[0].data,t.bp_peer,t.obVaultName),n=\\\"λ:/\\\"+t.obVaultName+\\\"/\\\"+i[0].path.split(\\\".\\\")[0];$tw.wiki.addTiddler(new $tw.Tiddler({title:n,type:\\\"text/markdown\\\",caption:p.split(\\\".\\\")[0],created:i[0].created,modified:i[0].modified,modifier:e,text:a,obvault:t.obVaultName})),console.log(\\\"创建条目：\\\"+n)}else if(1<i.length)for(const m in i){var l=i[m],o=await convert(l.data,t.bp_peer,t.obVaultName),d=\\\"λ:/\\\"+t.obVaultName+\\\"/\\\"+l.path.split(\\\".\\\")[0];$tw.wiki.addTiddler(new $tw.Tiddler({title:d,type:\\\"text/markdown\\\",caption:l.path.split(\\\".\\\")[0].split(\\\"/\\\").slice(-1),created:l.created,modified:l.modified,modifier:e,text:o,obvault:t.obVaultName})),console.log(\\\"创建同名异径条目：\\\"+d)}}for(const w in t.imgFiles){var r=t.imgFiles[w];if(0!=r.length&&1==r.length){var s=w,u=\\\"image/\\\"+s.substring(s.lastIndexOf(\\\".\\\")+1);$tw.wiki.addTiddler(new $tw.Tiddler({title:s,type:u,text:r[0].data,obvault:t.obVaultName})),console.log(\\\"创建图片条目：\\\"+s)}else if(1<r.length)for(const b in r){var g=r[b],c=g.path,f=\\\"image/\\\"+c.substring(c.lastIndexOf(\\\".\\\")+1);$tw.wiki.addTiddler(new $tw.Tiddler({title:c,type:f,text:g.data,obvault:t.obVaultName})),console.log(\\\"创建图片条目：\\\"+c)}}console.log(\\\"addVault: 所有添加工作已完成。\\\"),tm_notify(\\\"addVault\\\",\\\"所有添加工作已完成，请等待【文件系统同步服务】完成任务。\\\")}async function purgeVault(t){var e=$tw.wiki.filterTiddlers(\\\"[has:field[obvault]]\\\");0!==e.length?(e.forEach(t=>{console.log(\\\"删除条目：\\\"+t),$tw.wiki.deleteTiddler(t)}),tm_notify(\\\"purgeVault\\\",\\\"已经完全清空，请等待【文件系统同步服务】完成任务。\\\")):tm_notify(\\\"purgeVault\\\",\\\"未曾添加Obsidian仓库，写入记录为空。\\\")}async function fetchData(t,e,i){var a,n=[\\\".git\\\",\\\".obsidian\\\",\\\".stfolder\\\",\\\".stversions\\\"],n=(\\\"\\\"===i&&(a=JSON.stringify(n)),\\\"\\\"===i&&\\\"+\\\"!==i.at(0)||(l=i.substring(1).replace(/[ ]/g,\\\"\\\").split(\\\",\\\"),a=JSON.stringify(n.concat(l))),\\\"\\\"!==i&&\\\"+\\\"!==i.at(0)&&(l=i.replace(/[ ]/g,\\\"\\\").split(\\\",\\\"),a=JSON.stringify(l)),$tw.wiki.getTiddlerText(\\\"$:/info/url/full\\\")),l=n+\\\"obvault/\\\"+t+`?regText=${e}&ignore=`+a,n=(console.log(\\\"获取数据:\\\"+l),tm_notify(\\\"获取数据 (fetchData)  \\\",`\\\"${l}\\\"`),await fetch(l));return 400==n.status?(tm_notify(\\\"获取数据 (fetchData)  \\\",\\\"Not Folder\\\"),!1):(a=await n.json(),console.log(\\\"获取完成, 正在写入到wiki中。\\\"),tm_notify(\\\"获取数据 (fetchData)  \\\",\\\"获取完成, 正在写入到wiki中\\\"),a)}var ObvaultServer=class{constructor(){$tw.rootWidget.addEventListener(\\\"tw-obsidian-add\\\",async t=>{var e;\\\"tw-obsidian-add\\\"===t.type&&0!=(e=await fetchData(t.param[0],t.param[1],t.param[2]))&&addVault(e)}),$tw.rootWidget.addEventListener(\\\"tw-obsidian-purge\\\",async t=>{purgeVault()}),$tw.rootWidget.addEventListener(\\\"tw-obsidian-update\\\",async t=>{})}},ObVaultWidget=class extends import_widget.widget{refresh(t){return!1}async render(t,e){this.parentDomNode=t,this.execute();new ObvaultServer;var i=document.createElement(\\\"div\\\"),i=(i.innerHTML=`\\n    <div class=\\\"ob-main-widget-input\\\">\\n      <label for=\\\"path\\\">文件夹路径: </label>\\n      <input type=\\\"text\\\" id=\\\"ob-widget-path\\\" name=\\\"path\\\" placeholder=\\\"请输入路径。\\\">\\n      <label for=\\\"reg\\\">过滤文件: </label>\\n      <input type=\\\"text\\\" id=\\\"ob-widget-regText\\\" name=\\\"reg\\\" placeholder=\\\"请输入表达式\\\">\\n      <label for=\\\"ignore\\\">ignore: </label>\\n      <input type=\\\"text\\\" id=\\\"ob-widget-ignore\\\" name=\\\"ignore\\\" placeholder=\\\"请输入表达式\\\">\\n    </div>\\n    <button class=\\\"ob-main-widget-button\\\" id=\\\"ob-button-Add\\\" title=\\\"点击添加OB库\\\">Add</button>\\n    <button class=\\\"ob-main-widget-button\\\" id=\\\"ob-button-purge\\\" title=\\\"点击清空已添加的OB库\\\">purge</button>\\n    `,this.domNodes.push(t.appendChild(i)),document.getElementById(\\\"ob-button-Add\\\")),a=document.getElementById(\\\"ob-button-purge\\\");const n=document.getElementById(\\\"ob-widget-path\\\"),l=document.getElementById(\\\"ob-widget-regText\\\"),o=document.getElementById(\\\"ob-widget-ignore\\\");i.onclick=function(){0!==n.value.length?$tw.rootWidget.dispatchEvent({type:\\\"tw-obsidian-add\\\",param:[n.value,l.value,o.value]}):(console.log(\\\"输入为空！\\\"),tm_notify(\\\"addVault\\\",\\\"输入为空！\\\"))},a.onclick=function(){$tw.rootWidget.dispatchEvent({type:\\\"tw-obsidian-purge\\\"})}}};exports.obm=ObVaultWidget;\"}}}","title":"$:/plugins/whitefall/obsidian-vault","type":"application/json","version":"0.0.10","Modern.TiddlyDev#SHA256-Hashed":"08b7d7f98ef4e9d2232bbd48ae4f501847ade8b4f9a679c048da0248e84ccf73"}